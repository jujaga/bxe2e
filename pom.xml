<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.jujaga.e2e</groupId>
  <artifactId>bxe2e</artifactId>
  <version>0.3.0-SNAPSHOT</version>
  <name>bxe2e</name>
  <url>https://github.com/jujaga/bxe2e</url>
  <description>A Bidirectional Transformation approach to handling E2E
Data model emulates an OSCAR EMR database
Based off of the E2E-DTC 1.4 specification
	</description>
  <organization>
    <name>University of Victoria</name>
  </organization>
  <scm>
    <url>https://github.com/jujaga/bxe2e</url>
  </scm>
  <issueManagement>
    <url>https://github.com/jujaga/bxe2e/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>
  <ciManagement>
    <url>https://travis-ci.org/jujaga/bxe2e</url>
    <system>Travis-CI</system>
  </ciManagement>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.outputEncoding>UTF-8</project.build.outputEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <everest.version>1.1.0</everest.version>
    <spring.version>4.3.2.RELEASE</spring.version>
    <hibernate.version>5.2.2.Final</hibernate.version>
  </properties>
  <repositories>
    <!-- MARC-HI Everest Framework -->
    <repository>
      <id>marc-te-main</id>
      <name>MARC-HI Technology Exchange Private Maven Repository</name>
      <url>http://te.marc-hi.ca/mvn</url>
    </repository>
  </repositories>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <encoding>${project.build.sourceEncoding}</encoding>
          <optimize>true</optimize>
          <compilerArgument>${compilerArgument}</compilerArgument>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.5.0</version>
        <configuration>
          <mainClass>org.oscarehr.e2e.Main</mainClass>
          <!-- to get rid of the warning: [WARNING] Warning: killAfter is
            now deprecated. Do you need it ? Please comment on MEXEC-6. see: method execute()
            in https://github.com/ispringer/exec-maven-plugin/blob/master/src/main/java/org/codehaus/mojo/exec/ExecJavaMojo.java -->
          <killAfter>-1</killAfter>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.6</version>
        <executions>
          <execution>
            <phase>process-sources</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <linkXRef>false</linkXRef>
          <minimumTokens>100</minimumTokens>
          <targetJdk>${maven.compiler.target}</targetJdk>
          <verbose>true</verbose>
          <printFailingErrors>true</printFailingErrors>
          <failOnViolation>false</failOnViolation>
          <rulesets>
            <ruleset>/rulesets/java/basic.xml</ruleset>
            <ruleset>/rulesets/java/unusedcode.xml</ruleset>
            <ruleset>/rulesets/java/imports.xml</ruleset>
            <ruleset>/rulesets/java/braces.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.7.201606060606</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>4.2.0</version>
        <configuration>
          <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
          <serviceName>travis-ci</serviceName>
          <serviceJobId>${env.TRAVIS_JOB_ID}</serviceJobId>
          <repoToken>${repoToken}</repoToken>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <!-- JDOM -->
    <dependency>
      <groupId>org.jdom</groupId>
      <artifactId>jdom</artifactId>
      <version>2.0.2</version>
    </dependency>
    <!-- Apache Commons -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
      <version>4.1</version>
    </dependency>
    <!-- MARC-HI Everest Framework -->
    <dependency>
      <groupId>org.marc.everest</groupId>
      <artifactId>everest-core</artifactId>
      <version>${everest.version}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>org.marc.everest</groupId>
      <artifactId>everest-rmim-ca-r02-04-03</artifactId>
      <version>${everest.version}</version>
    </dependency>
    -->
    <dependency>
      <groupId>org.marc.everest</groupId>
      <artifactId>everest-rmim-uv-cdar2</artifactId>
      <version>${everest.version}</version>
    </dependency>
    <dependency>
      <groupId>org.marc.everest</groupId>
      <artifactId>everest-formatters-xml-its1</artifactId>
      <version>${everest.version}</version>
    </dependency>
    <dependency>
      <groupId>org.marc.everest</groupId>
      <artifactId>everest-formatters-xml-dt-r1</artifactId>
      <version>${everest.version}</version>
    </dependency>
    <!-- Spring Framework -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <!-- Hibernate & JPA -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate.version}</version>
    </dependency>
    <!-- HyperSQL -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>2.3.4</version>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.21</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
    </dependency>
  </dependencies>
</project>
